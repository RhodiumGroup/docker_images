sudo: required

language: python

services:
  - docker

build: &build
  stage: build
  script:
    - "if [[ \"$TRAVIS_TAG\" == \"\" ]]; then sed -i.bak 's/image: rhodium\\/worker.*/image: rhodium\\/worker:'\"$TRAVIS_COMMIT\"'/' notebook/worker-template.yml; else sed -i.bak 's/image: rhodium\\/worker:.*/image: rhodium\\/worker:'\"$TRAVIS_TAG\"'/' notebook/worker-template.yml; fi"
    - "rm notebook/worker-template.yml.bak"
    - "cat notebook/worker-template.yml | grep image:"
    - "docker pull rhodium/$IMAGE_NAME:dev"
    - cd $IMAGE_NAME
    - "docker build --pull --cache-from rhodium/$IMAGE_NAME:dev -t rhodium/$IMAGE_NAME:${TRAVIS_COMMIT} ."
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
    - docker push "rhodium/$IMAGE_NAME:${TRAVIS_COMMIT}"
  skip_cleanup: true

deploy-branch: &deploy-branch
  stage: deploy
  script:
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
    - docker pull rhodium/$IMAGE_NAME:$TRAVIS_COMMIT
    - docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT rhodium/$IMAGE_NAME:$TRAVIS_BRANCH
    - docker push "rhodium/$IMAGE_NAME:$TRAVIS_BRANCH"
  skip_cleanup: true
  if: branch != master

deploy-master: &deploy-master
  stage: deploy
  script:
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
    - docker pull rhodium/$IMAGE_NAME:$TRAVIS_COMMIT
    - docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT rhodium/$IMAGE_NAME:dev
    - docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT rhodium/$IMAGE_NAME:latest
    - docker push "rhodium/$IMAGE_NAME:$TRAVIS_COMMIT"
    - docker push "rhodium/$IMAGE_NAME:dev"
    - docker push "rhodium/$IMAGE_NAME:latest"
  skip_cleanup: true
  if: branch = master

deploy-tag: &deploy-tag
  stage: deploy
  script:
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
    - docker pull rhodium/$IMAGE_NAME:$TRAVIS_COMMIT
    - docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT rhodium/$IMAGE_NAME:$TRAVIS_TAG
    - docker push "rhodium/$IMAGE_NAME:$TRAVIS_TAG"
  skip_cleanup: true
  if:
    tag IS present

jobs:
  include:
    - <<: *build
      env:
        IMAGE_NAME=notebook
    - <<: *build
      env:
        IMAGE_NAME=worker
    - <<: *build
      env:
        IMAGE_NAME=octave-worker
    - <<: *deploy-branch
      env:
        IMAGE_NAME=notebook
    - <<: *deploy-branch
      env:
        IMAGE_NAME=worker
    - <<: *deploy-branch
      env:
        IMAGE_NAME=octave-worker
    - <<: *deploy-master
      env:
        IMAGE_NAME=notebook
    - <<: *deploy-master
      env:
        IMAGE_NAME=worker
    - <<: *deploy-master
      env:
        IMAGE_NAME=octave-worker
    - <<: *deploy-tag
      env:
        IMAGE_NAME=notebook
    - <<: *deploy-tag
      env:
        IMAGE_NAME=worker
    - <<: *deploy-tag
      env:
        IMAGE_NAME=octave-worker
