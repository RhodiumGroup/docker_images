sudo: required

services:
  - docker

env:
  matrix:
    - IMAGE_NAME=notebook
    - IMAGE_NAME=worker

install:
  - "if [[ \"$TRAVIS_TAG\" == \"\" ]]; then sed -i .bak 's/image: rhodium\\/worker.*/image: rhodium\\/worker:'\"$TRAVIS_COMMIT\"'/' notebook/worker-template.yml; else sed -i .bak 's/image: rhodium\\/worker:.*/image: rhodium/worker:'\"$TRAVIS_TAG\"'/' notebook/worker-template.yml; fi"
  - "rm notebook/worker-template.yml.bak"
  - "cat notebook/worker-template.yml | grep image:"
  - "cd $IMAGE_NAME"
  - "docker pull rhodium/$IMAGE_NAME:dev"
  - "docker build --pull --cache-from rhodium/$IMAGE_NAME:dev -t rhodium/$IMAGE_NAME:$TRAVIS_COMMIT ."

script:
  - docker images rhodium/$IMAGE_NAME:$TRAVIS_COMMIT

deploy:
  - provider: script
    script: docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT rhodium/$IMAGE_NAME:dev && docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" && docker push "rhodium/$IMAGE_NAME:$TRAVIS_COMMIT" && docker push "rhodium/$IMAGE_NAME:dev"
    skip_cleanup: true
    on:
      branch: dev

  - provider: script
    script: docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT rhodium/$IMAGE_NAME:dev && docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT rhodium/$IMAGE_NAME:latest && docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" && docker push "rhodium/$IMAGE_NAME:$TRAVIS_COMMIT" && docker push "rhodium/$IMAGE_NAME:dev" && docker push "rhodium/$IMAGE_NAME:latest"
    skip_cleanup: true
    on:
      branch: master

  - provider: script
    script: docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT rhodium/$IMAGE_NAME:$TRAVIS_TAG && docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" && docker push "rhodium/$IMAGE_NAME:$TRAVIS_TAG"
    skip_cleanup: true
    on:
      tags: true
