sudo: required

services:
  - docker

env:
- IMAGE_NAME=notebook
- IMAGE_NAME=worker

install:
- "if [[ \"$TRAVIS_TAG\" == \"\" ]]; then sed -i.bak \
's/image: rhodium\\/worker.*/image: rhodium\\/worker:'\"$TRAVIS_COMMIT\"'/' \
notebook/worker-template.yml; else sed -i.bak \
's/image: rhodium\\/worker:.*/image: rhodium\\/worker:'\"$TRAVIS_TAG\"'/' \
notebook/worker-template.yml; fi"
- "rm notebook/worker-template.yml.bak"
- "cat notebook/worker-template.yml | grep image:"
- "cp base_environment.yml $IMAGE_NAME/base_environment.yml"
- "cp common.sh $IMAGE_NAME/common.sh && chmod +x $IMAGE_NAME/common.sh"
- "cd $IMAGE_NAME"


script:
- docker build -t rhodium/$IMAGE_NAME:$TRAVIS_COMMIT .

deploy:
- provider: script
  script: >-
    docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT
    rhodium/$IMAGE_NAME:$TRAVIS_BRANCH &&
    docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" &&
    docker push "rhodium/$IMAGE_NAME:$TRAVIS_COMMIT" &&
    docker push "rhodium/$IMAGE_NAME:$TRAVIS_BRANCH"
  skip_cleanup: true
  on:
    all_branches: true
    condition: $TRAVIS_BRANCH =~ ^dev

- provider: script
  script: >-
    docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT rhodium/$IMAGE_NAME:dev &&
    docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT rhodium/$IMAGE_NAME:latest &&
    docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" &&
    docker push "rhodium/$IMAGE_NAME:$TRAVIS_COMMIT" &&
    docker push "rhodium/$IMAGE_NAME:dev" &&
    docker push "rhodium/$IMAGE_NAME:latest"
  skip_cleanup: true
  on:
    branch: master

- provider: script
  script: >-
    docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT
    rhodium/$IMAGE_NAME:$TRAVIS_TAG &&
    docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" &&
    docker push "rhodium/$IMAGE_NAME:$TRAVIS_TAG"
  skip_cleanup: true
  on:
    tags: true

# octave-worker builds
- provider: script
  script: >-
    docker build -t rhodium/octave-worker:$TRAVIS_COMMIT
    --build-arg TRAVIS_COMMIT=$TRAVIS_COMMIT ../octave-worker &&
    docker tag rhodium/octave-worker:$TRAVIS_COMMIT
    rhodium/octave-worker:$TRAVIS_BRANCH &&
    docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" &&
    docker push "rhodium/octave-worker:$TRAVIS_COMMIT" &&
    docker push "rhodium/octave-worker:$TRAVIS_BRANCH"
  skip_cleanup: true
  on:
    all_branches: true
    condition: $TRAVIS_BRANCH =~ ^dev
    condition: $IMAGE_NAME = worker

- provider: script
  script: >-
    docker tag rhodium/octave-worker:$TRAVIS_COMMIT
    rhodium/octave-worker:dev &&
    docker tag rhodium/octave-worker:$TRAVIS_COMMIT
    rhodium/octave-worker:latest &&
    docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" &&
    docker push "rhodium/octave-worker:$TRAVIS_COMMIT" &&
    docker push "rhodium/octave-worker:dev" &&
    docker push "rhodium/octave-worker:latest"
  skip_cleanup: true
  on:
    branch: master
    condition: $IMAGE_NAME = worker

- provider: script
  script: >-
    docker tag rhodium/octave-worker:$TRAVIS_COMMIT
    rhodium/octave-worker:$TRAVIS_TAG &&
    docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" &&
    docker push "rhodium/octave-worker:$TRAVIS_TAG"
  skip_cleanup: true
  on:
    tags: true
    condition: $IMAGE_NAME = worker

  # - stage: alignment
  #   language: python
  #   python:
  #     - 3.6
  #   script:
  #     - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  #     - bash miniconda.sh -b -p $HOME/miniconda
  #     - export PATH="$HOME/miniconda/bin:$PATH"
  #     - hash -r
  #     - conda config --set always_yes yes --set changeps1 no
  #     - conda update -q conda
  #     - conda info -a
  #     - conda install pytest pytest-cov pyyaml
  #     - pytest
