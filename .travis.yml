sudo: required

services:
  - docker

jobs:
  include:
    - stage: alignment
      language: python
      python:
        - 3.6
      script:
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - hash -r
        - conda config --set always_yes yes --set changeps1 no
        - conda update -q conda
        - conda info -a
        - conda create -q -n test-env python=3.6 pytest pytest-cov
        - source activate test-env

    - stage: build-stage1
      env:
        - IMAGE_NAME=notebook
      script:
        - "if [[ \"$TRAVIS_TAG\" == \"\" ]]; then sed -i.bak 's/image: rhodium\\/worker.*/image: rhodium\\/worker:'\"$TRAVIS_COMMIT\"'/' notebook/worker-template.yml; else sed -i.bak 's/image: rhodium\\/worker:.*/image: rhodium\\/worker:'\"$TRAVIS_TAG\"'/' notebook/worker-template.yml; fi"
        - "rm notebook/worker-template.yml.bak"
        - "cat notebook/worker-template.yml | grep image:"
        - "docker pull rhodium/$IMAGE_NAME:dev"
        - cd $IMAGE_NAME
        - "docker build --pull --cache-from rhodium/$IMAGE_NAME:dev -t rhodium/$IMAGE_NAME:${TRAVIS_COMMIT}.stage1 ."
        - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
        - docker push "rhodium/$IMAGE_NAME:${TRAVIS_COMMIT}.stage1"
      skip_cleanup: true

    - stage: build-stage1
      env:
        - IMAGE_NAME=worker
      script:
        - "if [[ \"$TRAVIS_TAG\" == \"\" ]]; then sed -i.bak 's/image: rhodium\\/worker.*/image: rhodium\\/worker:'\"$TRAVIS_COMMIT\"'/' notebook/worker-template.yml; else sed -i.bak 's/image: rhodium\\/worker:.*/image: rhodium\\/worker:'\"$TRAVIS_TAG\"'/' notebook/worker-template.yml; fi"
        - "rm notebook/worker-template.yml.bak"
        - "cat notebook/worker-template.yml | grep image:"
        - "docker pull rhodium/$IMAGE_NAME:dev"
        - cd $IMAGE_NAME
        - "docker build --pull --cache-from rhodium/$IMAGE_NAME:dev -t rhodium/$IMAGE_NAME:${TRAVIS_COMMIT}.stage1 ."
        - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
        - docker push "rhodium/$IMAGE_NAME:${TRAVIS_COMMIT}.stage1"
      skip_cleanup: true

    - stage: build-stage2
      env:
        - IMAGE_NAME=notebook
      script:
        - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
        - docker pull rhodium/$IMAGE_NAME:${TRAVIS_COMMIT}.stage1
        - docker build -t rhodium/$IMAGE_NAME:$TRAVIS_COMMIT --build-arg TRAVIS_COMMIT=${TRAVIS_COMMIT}.stage1 -f $IMAGE_NAME/Dockerfile.stage2 $IMAGE_NAME
        - docker push rhodium/$IMAGE_NAME:$TRAVIS_COMMIT
      skip_cleanup: true

    - stage: build-stage2
      env:
        - IMAGE_NAME=worker
      script:
        - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
        - docker pull rhodium/$IMAGE_NAME:${TRAVIS_COMMIT}.stage1
        - docker tag rhodium/$IMAGE_NAME:${TRAVIS_COMMIT}.stage1 rhodium/$IMAGE_NAME:${TRAVIS_COMMIT}
        - docker push rhodium/$IMAGE_NAME:$TRAVIS_COMMIT
      skip_cleanup: true

    - stage: deploy-dev
      env:
        - IMAGE_NAME=notebook
      script:
        - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
        - docker pull rhodium/$IMAGE_NAME:$TRAVIS_COMMIT
        - docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT rhodium/$IMAGE_NAME:dev
        - docker push "rhodium/$IMAGE_NAME:$TRAVIS_COMMIT"
        - docker push "rhodium/$IMAGE_NAME:dev"
      skip_cleanup: true
      if: (branch = dev) AND (type = push)

    - stage: deploy-dev
      env:
        - IMAGE_NAME=worker
      script:
        - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
        - docker pull rhodium/$IMAGE_NAME:$TRAVIS_COMMIT
        - docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT rhodium/$IMAGE_NAME:dev
        - docker push "rhodium/$IMAGE_NAME:$TRAVIS_COMMIT"
        - docker push "rhodium/$IMAGE_NAME:dev"
      skip_cleanup: true
      if: (branch = dev) AND (type = push)

    - stage: deploy-master
      env:
        - IMAGE_NAME=notebook
      script:
        - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
        - docker pull rhodium/$IMAGE_NAME:$TRAVIS_COMMIT
        - docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT rhodium/$IMAGE_NAME:dev
        - docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT rhodium/$IMAGE_NAME:latest
        - docker push "rhodium/$IMAGE_NAME:$TRAVIS_COMMIT"
        - docker push "rhodium/$IMAGE_NAME:dev"
        - docker push "rhodium/$IMAGE_NAME:latest"
      skip_cleanup: true
      if: (branch = master) AND (type = push)

    - stage: deploy-master
      env:
        - IMAGE_NAME=worker
      script:
        - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
        - docker pull rhodium/$IMAGE_NAME:$TRAVIS_COMMIT
        - docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT rhodium/$IMAGE_NAME:dev
        - docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT rhodium/$IMAGE_NAME:latest
        - docker push "rhodium/$IMAGE_NAME:$TRAVIS_COMMIT"
        - docker push "rhodium/$IMAGE_NAME:dev"
        - docker push "rhodium/$IMAGE_NAME:latest"
      skip_cleanup: true
      if: (branch = master) AND (type = push)

    - stage: deploy-tag
      env:
        - IMAGE_NAME=notebook
      script:
        - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
        - docker pull rhodium/$IMAGE_NAME:$TRAVIS_COMMIT
        - docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT rhodium/$IMAGE_NAME:$TRAVIS_TAG
        - docker push "rhodium/$IMAGE_NAME:$TRAVIS_TAG"
      skip_cleanup: true
      if:
        (tag IS present) AND (type = push)

    - stage: deploy-tag
      env:
        - IMAGE_NAME=worker
      script:
        - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
        - docker pull rhodium/$IMAGE_NAME:$TRAVIS_COMMIT
        - docker tag rhodium/$IMAGE_NAME:$TRAVIS_COMMIT rhodium/$IMAGE_NAME:$TRAVIS_TAG
        - docker push "rhodium/$IMAGE_NAME:$TRAVIS_TAG"
      skip_cleanup: true
      if:
        (tag IS present) AND (type = push)
