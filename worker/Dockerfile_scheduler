## using same base image as the "base image for the base image" of the notebook image
FROM ubuntu:bionic-20190612@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d
ARG DEBIAN_FRONTEND=noninteractive

# needed to properly install packages that use numpy libraries
ENV NPY_DISTUTILS_APPEND_FLAGS=1

# needed so that matplotlib will work headless
ENV MPLBACKEND=Agg

## filepath curation
COPY shared_resources /tempdir
COPY add_service_creds.py /usr/bin
COPY prepare.sh /usr/bin

# install apt-get packages
apt-get update -y --no-install-recommends
apt-get install -yq --no-install-recommends \
  locales \
  sudo \
  wget


###########
## install miniconda (following jupyter/base-notebook
RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && \
    locale-gen
    
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
ENV CONDA_DIR=/opt/conda \
    SHELL=/bin/bash \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8
ENV PATH=$CONDA_DIR/bin:$PATH

ENV MINICONDA_VERSION=4.7.12.1 \
    MINICONDA_MD5=81c773ff87af5cfac79ab862942ab6b3

WORKDIR /tmp
RUN wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh && \
    echo "${MINICONDA_MD5} *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh" | md5sum -c - && \
    /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR && \
    rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh && \
    conda config --system --prepend channels conda-forge && \
    conda config --system --set channel_priority strict && \
    conda update -n base --yes conda && \
    conda update --all --yes
###########

## set up python env
RUN mkdir /opt/conda/specs
COPY shared_resources/scheduler_environment.yml /opt/conda/specs
COPY shared_resources/base_environment.yml /opt/conda/specs
RUN conda env update -f /opt/conda/specs/scheduler_environment.yml

## clean up
RUN rm -rf /var/lib/apt/lists/* /tmp/* \
    && conda clean -yaf \
    && sudo apt-get clean

## prepare container
ENV OMP_NUM_THREADS=1
ENV MKL_NUM_THREADS=1
ENV OPENBLAS_NUM_THREADS=1

WORKDIR /

ENTRYPOINT ["tini", "--", "/usr/bin/prepare.sh"]