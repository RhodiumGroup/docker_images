## using same base image as the "base image for the base image" of the notebook image
FROM ubuntu:focal-20201106@sha256:4e4bc990609ed865e07afc8427c30ffdddca5153fd4e82c20d8f0783a291e241
ARG DEBIAN_FRONTEND=noninteractive
ARG PYTHON_VERSION=default

# needed to properly install packages that use numpy libraries
ENV NPY_DISTUTILS_APPEND_FLAGS=1

# needed so that matplotlib will work headless
ENV MPLBACKEND=Agg

## filepath curation
COPY shared_resources /tempdir
COPY add_service_creds.py /usr/bin

# install apt-get packages
RUN apt-get update -y --no-install-recommends
RUN apt-get install -yq --no-install-recommends \
  ca-certificates \
  locales \
  sudo \
  wget

###########
# ---- Miniforge installer ----
# install miniconda (following jupyter/base-notebook)
# Default values can be overridden at build time
# (ARGS are in lower case to distinguish them from ENV)
# Check https://github.com/conda-forge/miniforge/releases
# Conda version
ARG conda_version="4.9.2"
# Miniforge installer patch version
ARG miniforge_patch_number="0"
# Miniforge installer architecture
ARG miniforge_arch="x86_64"
# Python implementation to use 
# can be either Miniforge3 to use Python or Miniforge-pypy3 to use PyPy
ARG miniforge_python="Miniforge3"

# Miniforge archive to install
ARG miniforge_version="${conda_version}-${miniforge_patch_number}"
# Miniforge installer
ARG miniforge_installer="${miniforge_python}-${miniforge_version}-Linux-${miniforge_arch}.sh"
# Miniforge checksum
ARG miniforge_checksum="6321775eb2c02d7f51d3a9004ce0be839099f126f4099c781531428536669560"

RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && \
    locale-gen

ENV CONDA_DIR=/opt/conda \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8
ENV PATH=$CONDA_DIR/bin:$PATH \
    CONDA_VERSION="${conda_version}"

WORKDIR /tmp
RUN wget --quiet "https://github.com/conda-forge/miniforge/releases/download/${miniforge_version}/${miniforge_installer}" && \
    echo "${miniforge_checksum} *${miniforge_installer}" | sha256sum --check && \
    /bin/bash "${miniforge_installer}" -f -b -p $CONDA_DIR && \
    rm "${miniforge_installer}" && \
    # Conda configuration see https://conda.io/projects/conda/en/latest/configuration.html
    if [ ! $PYTHON_VERSION = 'default' ]; then conda install --yes python=$PYTHON_VERSION; fi && \
    conda config --system --set channel_priority strict && \
    conda install mamba --yes && \
    mamba update conda --yes && \
    mamba update --all --quiet --yes
###########

## set up python env
RUN mkdir /opt/conda/specs
COPY shared_resources/scheduler_environment.yml /opt/conda/specs
COPY shared_resources/base_environment.yml /opt/conda/specs
RUN mamba env update -f /opt/conda/specs/scheduler_environment.yml

## clean up
RUN rm -rf /var/lib/apt/lists/* /tmp/*\
    && mamba clean -yaf \
    && sudo apt-get clean

WORKDIR /

# set entrypoint to same as default dask-gateway scheduler
ENTRYPOINT ["tini", "-g", "--"]